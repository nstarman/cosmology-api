name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - "v*"
    tags:
      - "*"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-checks:
    name: Mandatory checks before CI
    runs-on: ubuntu-latest
    steps:
      - name: Check base branch
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const skip_label = 'skip-basebranch-check';
            const { default_branch: allowed_basebranch } = context.payload.repository;
            const pr = context.payload.pull_request;
            if (pr.user.login === 'meeseeksmachine') {
              core.info(`Base branch check is skipped since this is auto-backport by ${pr.user.login}`);
              return;
            }
            if (pr.labels.find(lbl => lbl.name === skip_label)) {
              core.info(`Base branch check is skipped due to the presence of ${skip_label} label`);
              return;
            }
            if (pr.base.ref !== allowed_basebranch) {
              core.setFailed(`PR opened against ${pr.base.ref}, not ${allowed_basebranch}`);
            } else {
              core.info(`PR opened correctly against ${allowed_basebranch}`);
            }

  pre-commit:
    name: Format
    needs: pre-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --hook-stage manual --all-files
      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        runs-on: [ubuntu-latest]

        include:
          - python-version: "3.11"
            runs-on: macos-latest
          - python-version: "3.11"
            runs-on: windows-latest
          - python-version: pypy-3.10
            runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install package
        run: python -m pip install .[test]

      - name: Test package
        run: >-
          python -m pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.4

  check-cd:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@v1
    needs: pre-checks
    permissions:
      contents: none
    with:
      upload_to_pypi: false
      upload_to_anaconda: false
      test_extras: test
      test_command:
        pytest $GITHUB_WORKSPACE/tests $GITHUB_WORKSPACE/docs -p no:warnings
