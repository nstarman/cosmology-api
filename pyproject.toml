[build-system]
requires = ["hatchling", "hatch-vcs", "mypy>=0.991"]
build-backend = "hatchling.build"


[project]
  name = "cosmology.api"
  description = "Cosmology API standard"
  readme = "README.rst"
  requires-python = ">=3.9"
  license = {file = "LICENSE"}
  keywords = ["cosmology", "API"]
  authors = [
    { name = "cosmology-api devs", email = "nstarman@users.noreply.github.com" },
    { name = "Nathaniel Starkman", email = "nstarman@users.noreply.github.com" },
    { name = "Nicolas Tessore", email = "n.tessore@ucl.ac.uk"}
  ]
  maintainers = [
    {name = "Nathaniel Starkman", email = "nstarman@users.noreply.github.com"},
    {name = "Nicolas Tessore", email = "n.tessore@ucl.ac.uk"}
  ]
  classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
  ]
  dynamic = ["version"]
  dependencies = []

[project.optional-dependencies]
  test = [
    "coverage[toml]",
    "numpy>=1.21",
    "packaging",
    "pytest >=6",
    "pytest-cov >=3",
    "sybil",
    "typing_extensions",
  ]
  dev = [
    "pytest >=6",
    "pytest-cov >=3",
  ]
  docs = [
    "furo>=2023.08.17",
    "numpydoc",
    "sphinx>=7.0",
    "sphinx_autodoc_typehints",
    "sphinx_copybutton",
    "sybil",
    "tomli",
    "typing_extensions",
  ]

[project.urls]
  Homepage = "https://github.com/cosmology-api/cosmology.api"
  "Bug Tracker" = "https://github.com/cosmology-api/cosmology.api/issues"
  Discussions = "https://github.com/cosmology-api/cosmology.api/discussions"
  Changelog = "https://github.com/cosmology-api/cosmology.api/releases"
  Documentation = "https://cosmology.readthedocs.org/projects/api"


[tool.hatch]
  version.source = "vcs"
  build.hooks.vcs.version-file = "src/cosmology/api/_version.py"
  envs.default.dependencies = [
    "pytest",
    "pytest-cov",
  ]


[tool.coverage.report]
  exclude_lines = [
    # Have to re-enable the standard pragma
    # and branches that don't pertain to this version of Python
    "pragma: no cover",
    "pragma: py{ignore_python_version}",
    # Don't complain about abstract methods, they aren't run:
    '@(abc\.)?abstractmethod',
    # Exclude type check blocks and Protocol contents, they aren't run:
    "if TYPE_CHECKING:",
    '\.\.\.',
  ]


[tool.mypy]
  python_version = "3.9"

  namespace_packages = true
  explicit_package_bases = true
  mypy_path = "$MYPY_CONFIG_FILE_DIR/src"

  strict = true
  disallow_subclassing_any = false
  show_error_codes = true
  enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
  disallow_untyped_defs = true
  no_implicit_optional = true
  warn_return_any = true
  warn_redundant_casts = true
  warn_unused_configs = true
  warn_unreachable = true
  exclude = '''(^|/)tests/|(^/)docs/|(^/)conftest\.py'''

  [[tool.mypy.overrides]]
    module = [
      "tests/*",
      "docs/*",
    ]
    ignore_errors = true

  [[tool.mypy.overrides]]
    module = [
      "sybil.*",
      "tomli.*",
    ]
    ignore_missing_imports = true


[tool.pytest.ini_options]
minversion = "7.0"
xfail_strict = true
log_cli_level = "INFO"
testpaths = [
  "tests",
  "src/cosmology",
  "docs",
]
text_file_format = "rst"
addopts = [
  "-p no:doctest",
  "-ra",
  "--showlocals",
  "--strict-markers",
  "--strict-config"
]
markers = [
    "incompatible_with_mypyc: run when testing mypyc compiled code",
]
filterwarnings = [
  # tomlkit
  "ignore:The config value",
  # NumPy
  "ignore:The numpy.array_api submodule is still experimental. See NEP 47.:UserWarning",
]


[tool.ruff]
src = ["src"]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "ANN101",  # Missing type annotation for {name} in method  # TODO: report to Ruff
  "ARG001",  # Unused function argument
  "ARG002",  # Unused method argument
  "COM812",  # trailing-comma-missing
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in __init__
  "D203",  # 1 blank line required before class docstring
  "D213",  # Multi-line docstring summary should start at the second line
  "D401",  # First line of docstring should be in imperative mood
  "FBT003",  # Boolean positional value in function call
  "FIX002",  # Line contains TODO,
  "N802",  # Function name {name} should be lowercase
  "PD",  # pandas-vet
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO
]
# Uncomment if using a _compat.typing backport
# typing-modules = ["cosmology_api._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"src/cosmology/api/_array_api/*.py" = ["A002", "A003", "D212", "D205", "E501", "N801"]
"docs/*.py" = ["INP001"]
"tests/*.py" = [
  "ANN",
  "PLR0913",  # Too many arguments to function call
  "TID252",
]
"test_*.py" = ["D", "N8", "S101"]
"noxfile.py" = ["T20"]

[tool.ruff.isort]
forced-separate = ["tests"]


[tool.pylint]
py-version = "3.9"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
]
